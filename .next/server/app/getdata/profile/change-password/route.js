"use strict";(()=>{var e={};e.id=3988,e.ids=[3988],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},25791:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>q,patchFetch:()=>j,requestAsyncStorage:()=>m,routeModule:()=>w,serverHooks:()=>v,staticGenerationAsyncStorage:()=>f});var r={};t.r(r),t.d(r,{POST:()=>h});var a=t(49303),n=t(88716),o=t(60670),i=t(53524),u=t(87070),p=t(71615),c=t(41482),d=t.n(c);let l=require("bcrypt");var g=t.n(l);let x=new i.PrismaClient;async function h(e){try{let s;let t=(0,p.cookies)(),r=t.get("session_token")?.value,a=e.headers.get("authorization"),n=a?.split(" ")[1]||r;if(!n)return u.NextResponse.json({success:!1,message:"Unauthorized: No token provided"},{status:401});try{s=d().verify(n,process.env.JWT_SECRET_KEY).userId}catch(e){return u.NextResponse.json({success:!1,message:"Unauthorized: Invalid token"},{status:401})}let{currentPassword:o,newPassword:i}=await e.json();if(!o||!i)return u.NextResponse.json({success:!1,message:"Current password and new password are required"},{status:400});if(i.length<8)return u.NextResponse.json({success:!1,message:"New password must be at least 8 characters long"},{status:400});let c=await x.user.findUnique({where:{id:s},select:{id:!0,password:!0}});if(!c)return u.NextResponse.json({success:!1,message:"User not found"},{status:404});if(!await g().compare(o,c.password))return u.NextResponse.json({success:!1,message:"Current password is incorrect"},{status:400});let l=await g().hash(i,10);return await x.user.update({where:{id:s},data:{password:l}}),u.NextResponse.json({success:!0,message:"Password changed successfully"})}catch(e){return console.error("Error changing password:",e),u.NextResponse.json({success:!1,message:"Internal server error",error:void 0},{status:500})}finally{await x.$disconnect()}}let w=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/getdata/profile/change-password/route",pathname:"/getdata/profile/change-password",filename:"route",bundlePath:"app/getdata/profile/change-password/route"},resolvedPagePath:"C:\\Users\\hp\\Desktop\\gibemarket\\Moteregna\\new\\Moteregna\\app\\getdata\\profile\\change-password\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:v}=w,q="/getdata/profile/change-password/route";function j(){return(0,o.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:f})}}};var s=require("../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[9276,5972,4261],()=>t(25791));module.exports=r})();