"use strict";(()=>{var e={};e.id=2373,e.ids=[2373],e.modules={53524:e=>{e.exports=require("@prisma/client")},67096:e=>{e.exports=require("bcrypt")},99344:e=>{e.exports=require("jsonwebtoken")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},9926:e=>{e.exports=import("zod")},56249:(e,s)=>{Object.defineProperty(s,"l",{enumerable:!0,get:function(){return function e(s,r){return r in s?s[r]:"then"in s&&"function"==typeof s.then?s.then(s=>e(s,r)):"function"==typeof s&&"default"===r?s:void 0}}})},40184:(e,s,r)=>{r.a(e,async(e,t)=>{try{r.r(s),r.d(s,{config:()=>c,default:()=>d,routeModule:()=>l});var n=r(71802),a=r(47153),i=r(56249),o=r(25033),u=e([o]);o=(u.then?(await u)():u)[0];let d=(0,i.l)(o,"default"),c=(0,i.l)(o,"config"),l=new n.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/admin/add_admin",pathname:"/api/admin/add_admin",bundlePath:"",filename:""},userland:o});t()}catch(e){t(e)}})},25033:(e,s,r)=>{r.a(e,async(e,t)=>{try{r.r(s),r.d(s,{default:()=>l});var n=r(53524),a=r(9926),i=r(99344),o=r.n(i),u=r(67096),d=r.n(u),c=e([a]);a=(c.then?(await c)():c)[0];let m=new n.PrismaClient,p=a.z.object({firstName:a.z.string().min(1,"First name is required"),lastName:a.z.string().min(1,"Last name is required"),phone:a.z.string().min(10,"Valid phone number is required"),password:a.z.string().min(6,"Password must be at least 6 characters")}),f=e=>{try{return o().verify(e,process.env.JWT_SECRET_KEY)}catch(e){return console.error("Token validation failed:",e),null}};async function l(e,s){if("POST"!==e.method)return s.status(405).json({success:!1,message:"Method not allowed"});try{let r=e.headers.authorization?.split(" ")[1]||e.cookies.session_token;if(!r)return s.status(401).json({success:!1,message:"Unauthorized: No token provided"});let t=f(r);if(!t)return s.status(401).json({success:!1,message:"Unauthorized: Invalid token"});if("SUPERADMIN"!==t.role)return s.status(403).json({success:!1,message:"Forbidden: Only superadmins can create admin accounts"});let n=p.parse(e.body);if(await m.user.findUnique({where:{phone:n.phone}}))return s.status(400).json({success:!1,message:"User with this phone number already exists"});let a=await d().hash(n.password,10),i=await m.user.create({data:{firstName:n.firstName,lastName:n.lastName,phone:n.phone,password:a,role:"ADMIN"},select:{id:!0,firstName:!0,lastName:!0,phone:!0,role:!0,createdAt:!0}});return s.status(201).json({success:!0,message:"Admin account created successfully",data:i})}catch(e){if(console.error("Error creating admin:",e),e instanceof a.z.ZodError)return s.status(400).json({success:!1,message:"Validation failed",errors:e.errors});if(e instanceof o().JsonWebTokenError)return s.status(401).json({success:!1,message:"Unauthorized: Invalid token"});return s.status(500).json({success:!1,message:"Internal server error",error:void 0})}finally{await m.$disconnect()}}t()}catch(e){t(e)}})},47153:(e,s)=>{var r;Object.defineProperty(s,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},71802:(e,s,r)=>{e.exports=r(20145)}};var s=require("../../../webpack-api-runtime.js");s.C(e);var r=s(s.s=40184);module.exports=r})();